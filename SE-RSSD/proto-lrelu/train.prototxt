name: "VGG_VOC0712_SSD_300x300_train"
layer {
  name: "data"
  type: "AnnotatedData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
    resize_param {
      prob: 1
      resize_mode: WARP
      height: 300
      width: 300
      interp_mode: LINEAR
      interp_mode: AREA
      interp_mode: NEAREST
      interp_mode: CUBIC
      interp_mode: LANCZOS4
    }
    emit_constraint {
      emit_type: CENTER
    }
    distort_param {
      brightness_prob: 0.5
      brightness_delta: 32
      contrast_prob: 0.5
      contrast_lower: 0.5
      contrast_upper: 1.5
      hue_prob: 0.5
      hue_delta: 18
      saturation_prob: 0.5
      saturation_lower: 0.5
      saturation_upper: 1.5
      random_order_prob: 0.0
    }
    expand_param {
      prob: 0.5
      max_expand_ratio: 4.0
    }
  }
  data_param {
    source: "data/VOCdevkit/VOC0712/lmdb/VOC0712_trainval_lmdb"
    batch_size: 6
    backend: LMDB
  }
  annotated_data_param {
    batch_sampler {
      max_sample: 1
      max_trials: 1
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.1
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.3
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.5
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.7
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.9
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    label_map_file: "data/VOC0712/labelmap_voc.prototxt"
  }
}
########################################################################
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "prelu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "prelu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "prelu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "fc6"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 6
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 6
  }
}
layer {
  name: "prelu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "fc7"
  type: "Convolution"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prelu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "fc7"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_1_prelu"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_prelu"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_1_prelu"
  type: "ReLU"
  bottom: "conv7_1"
  top: "conv7_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "conv7_1"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_prelu"
  type: "ReLU"
  bottom: "conv7_2"
  top: "conv7_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv8_1"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_1_prelu"
  type: "ReLU"
  bottom: "conv8_1"
  top: "conv8_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv8_2"
  type: "Convolution"
  bottom: "conv8_1"
  top: "conv8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_prelu"
  type: "ReLU"
  bottom: "conv8_2"
  top: "conv8_2"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv9_1"
  type: "Convolution"
  bottom: "conv8_2"
  top: "conv9_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_1_prelu"
  type: "ReLU"
  bottom: "conv9_1"
  top: "conv9_1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv9_2"
  type: "Convolution"
  bottom: "conv9_1"
  top: "conv9_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_2_prelu"
  type: "ReLU"
  bottom: "conv9_2"
  top: "conv9_2"
  relu_param{
    negative_slope: 0.1
  }
}

layer {
  name: "conv4_3_norm"
  type: "Normalize"
  bottom: "conv4_3"
  top: "conv4_3_norm"
  norm_param {
    across_spatial: false
    scale_filler {
      type: "constant"
      value: 20
    }
    channel_shared: false
  }
}



###### jisoo
# conv4_3_norm
# fc7
# conv6_2
# conv7_2
# conv8_2
# conv9_2
######

### conv4_3_norm 

layer {
  name: "conv4_3_norm_norm"
  type: "Normalize"
  bottom: "conv4_3_norm"
  top: "conv4_3_norm_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

layer {
  name: "conv4_3_norm_to_fc7"
  type: "Pooling"
  bottom: "conv4_3_norm"
  top: "conv4_3_norm_to_fc7"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_3_norm_to_fc7_norm"
  type: "Normalize"
  bottom: "conv4_3_norm_to_fc7"
  top: "conv4_3_norm_to_fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv4_3_norm_to_conv6"
  type: "Pooling"
  bottom: "conv4_3_norm_to_fc7"
  top: "conv4_3_norm_to_conv6"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv4_3_norm_to_conv6_norm"
  type: "Normalize"
  bottom: "conv4_3_norm_to_conv6"
  top: "conv4_3_norm_to_conv6_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv4_3_norm_to_conv7"
  type: "Pooling"
  bottom: "conv4_3_norm_to_conv6"
  top: "conv4_3_norm_to_conv7"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_3_norm_to_conv7_norm"
  type: "Normalize"
  bottom: "conv4_3_norm_to_conv7"
  top: "conv4_3_norm_to_conv7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv4_3_norm_to_conv8"
  type: "Pooling"
  bottom: "conv4_3_norm_to_conv7"
  top: "conv4_3_norm_to_conv8"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_3_norm_to_conv8_norm"
  type: "Normalize"
  bottom: "conv4_3_norm_to_conv8"
  top: "conv4_3_norm_to_conv8_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv4_3_norm_to_conv9"
  type: "Pooling"
  bottom: "conv4_3_norm_to_conv8"
  top: "conv4_3_norm_to_conv9"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_3_norm_to_conv9_norm"
  type: "Normalize"
  bottom: "conv4_3_norm_to_conv9"
  top: "conv4_3_norm_to_conv9_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

### fc7 

layer {
  name: "fc7_norm"
  type: "Normalize"
  bottom: "fc7"
  top: "fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "fc7_to_conv6"
  type: "Pooling"
  bottom: "fc7"
  top: "fc7_to_conv6"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "fc7_to_conv6_norm"
  type: "Normalize"
  bottom: "fc7_to_conv6"
  top: "fc7_to_conv6_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "fc7_to_conv7"
  type: "Pooling"
  bottom: "fc7_to_conv6"
  top: "fc7_to_conv7"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc7_to_conv7_norm"
  type: "Normalize"
  bottom: "fc7_to_conv7"
  top: "fc7_to_conv7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "fc7_to_conv8"
  type: "Pooling"
  bottom: "fc7_to_conv7"
  top: "fc7_to_conv8"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "fc7_to_conv8_norm"
  type: "Normalize"
  bottom: "fc7_to_conv8"
  top: "fc7_to_conv8_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "fc7_to_conv9"
  type: "Pooling"
  bottom: "fc7_to_conv8"
  top: "fc7_to_conv9"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "fc7_to_conv9_norm"
  type: "Normalize"
  bottom: "fc7_to_conv9"
  top: "fc7_to_conv9_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

##deconvolution

layer {
  name: "fc7_to_conv4"
  type: "Deconvolution"
  bottom: "fc7"
  top: "fc7_to_conv4"
  convolution_param {
    num_output: 1024
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "fc7_to_conv4_norm"
  type: "Normalize"
  bottom: "fc7_to_conv4"
  top: "fc7_to_conv4_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

### conv6_2 

layer {
  name: "conv6_2_norm"
  type: "Normalize"
  bottom: "conv6_2"
  top: "conv6_2_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

layer {
  name: "conv6_2_to_conv7"
  type: "Pooling"
  bottom: "conv6_2"
  top: "conv6_2_to_conv7"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv6_2_to_conv7_norm"
  type: "Normalize"
  bottom: "conv6_2_to_conv7"
  top: "conv6_2_to_conv7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv6_2_to_conv8"
  type: "Pooling"
  bottom: "conv6_2_to_conv7"
  top: "conv6_2_to_conv8"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv6_2_to_conv8_norm"
  type: "Normalize"
  bottom: "conv6_2_to_conv8"
  top: "conv6_2_to_conv8_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv6_2_to_conv9"
  type: "Pooling"
  bottom: "conv6_2_to_conv8"
  top: "conv6_2_to_conv9"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv6_2_to_conv9_norm"
  type: "Normalize"
  bottom: "conv6_2_to_conv9"
  top: "conv6_2_to_conv9_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}


##deconvolution

layer {
  name: "conv6_2_to_fc7"
  type: "Deconvolution"
  bottom: "conv6_2"
  top: "conv6_2_to_fc7"
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv6_2_to_fc7_norm"
  type: "Normalize"
  bottom: "conv6_2_to_fc7"
  top: "conv6_2_to_fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv6_2_to_conv4"
  type: "Deconvolution"
  bottom: "conv6_2_to_fc7"
  top: "conv6_2_to_conv4"
  convolution_param {
    num_output: 512
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv6_2_to_conv4_norm"
  type: "Normalize"
  bottom: "conv6_2_to_conv4"
  top: "conv6_2_to_conv4_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

### conv7_2 

layer {
  name: "conv7_2_norm"
  type: "Normalize"
  bottom: "conv7_2"
  top: "conv7_2_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv7_2_to_conv8"
  type: "Pooling"
  bottom: "conv7_2"
  top: "conv7_2_to_conv8"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv7_2_to_conv8_norm"
  type: "Normalize"
  bottom: "conv7_2_to_conv8"
  top: "conv7_2_to_conv8_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv7_2_to_conv9"
  type: "Pooling"
  bottom: "conv7_2_to_conv8"
  top: "conv7_2_to_conv9"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv7_2_to_conv9_norm"
  type: "Normalize"
  bottom: "conv7_2_to_conv9"
  top: "conv7_2_to_conv9_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
##deconvolution

layer {
  name: "conv7_2_to_conv6"
  type: "Deconvolution"
  bottom: "conv7_2"
  top: "conv7_2_to_conv6"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv7_2_to_conv6_norm"
  type: "Normalize"
  bottom: "conv7_2_to_conv6"
  top: "conv7_2_to_conv6_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv7_2_to_fc7"
  type: "Deconvolution"
  bottom: "conv7_2_to_conv6"
  top: "conv7_2_to_fc7"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv7_2_to_fc7_norm"
  type: "Normalize"
  bottom: "conv7_2_to_fc7"
  top: "conv7_2_to_fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv7_2_to_conv4"
  type: "Deconvolution"
  bottom: "conv7_2_to_fc7"
  top: "conv7_2_to_conv4"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv7_2_to_conv4_norm"
  type: "Normalize"
  bottom: "conv7_2_to_conv4"
  top: "conv7_2_to_conv4_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

### conv8_2 
layer {
  name: "conv8_2_norm"
  type: "Normalize"
  bottom: "conv8_2"
  top: "conv8_2_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
## maxpooling
layer {
  name: "conv8_2_to_conv9"
  type: "Pooling"
  bottom: "conv8_2"
  top: "conv8_2_to_conv9"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv8_2_to_conv9_norm"
  type: "Normalize"
  bottom: "conv8_2_to_conv9"
  top: "conv8_2_to_conv9_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

## deconvolution

layer {
  name: "conv8_2_to_conv7"
  type: "Deconvolution"
  bottom: "conv8_2"
  top: "conv8_2_to_conv7"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv8_2_to_conv7_norm"
  type: "Normalize"
  bottom: "conv8_2_to_conv7"
  top: "conv8_2_to_conv7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv8_2_to_conv6"
  type: "Deconvolution"
  bottom: "conv8_2_to_conv7"
  top: "conv8_2_to_conv6"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv8_2_to_conv6_norm"
  type: "Normalize"
  bottom: "conv8_2_to_conv6"
  top: "conv8_2_to_conv6_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv8_2_to_fc7"
  type: "Deconvolution"
  bottom: "conv8_2_to_conv6"
  top: "conv8_2_to_fc7"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv8_2_to_fc7_norm"
  type: "Normalize"
  bottom: "conv8_2_to_fc7"
  top: "conv8_2_to_fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv8_2_to_conv4"
  type: "Deconvolution"
  bottom: "conv8_2_to_fc7"
  top: "conv8_2_to_conv4"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv8_2_to_conv4_norm"
  type: "Normalize"
  bottom: "conv8_2_to_conv4"
  top: "conv8_2_to_conv4_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

### conv9_2

layer {
  name: "conv9_2_norm"
  type: "Normalize"
  bottom: "conv9_2"
  top: "conv9_2_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

##deconvolution

layer {
  name: "conv9_2_to_conv8"
  type: "Deconvolution"
  bottom: "conv9_2"
  top: "conv9_2_to_conv8"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv9_2_to_conv8_norm"
  type: "Normalize"
  bottom: "conv9_2_to_conv8"
  top: "conv9_2_to_conv8_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv9_2_to_conv7"
  type: "Deconvolution"
  bottom: "conv9_2_to_conv8"
  top: "conv9_2_to_conv7"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv9_2_to_conv7_norm"
  type: "Normalize"
  bottom: "conv9_2_to_conv7"
  top: "conv9_2_to_conv7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv9_2_to_conv6"
  type: "Deconvolution"
  bottom: "conv9_2_to_conv7"
  top: "conv9_2_to_conv6"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv9_2_to_conv6_norm"
  type: "Normalize"
  bottom: "conv9_2_to_conv6"
  top: "conv9_2_to_conv6_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv9_2_to_fc7"
  type: "Deconvolution"
  bottom: "conv9_2_to_conv6"
  top: "conv9_2_to_fc7"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv9_2_to_fc7_norm"
  type: "Normalize"
  bottom: "conv9_2_to_fc7"
  top: "conv9_2_to_fc7_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}
layer {
  name: "conv9_2_to_conv4"
  type: "Deconvolution"
  bottom: "conv9_2_to_fc7"
  top: "conv9_2_to_conv4"
  convolution_param {
    num_output: 256
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv9_2_to_conv4_norm"
  type: "Normalize"
  bottom: "conv9_2_to_conv4"
  top: "conv9_2_to_conv4_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
  }
}

## jisoo and lvbo
################################## add SE block ########################################
# conv4_3_norm

layer {
  name: "conv4_3_norm_pix"
  type: "Concat"
  bottom: "conv4_3_norm_norm" #2816 38 38
  bottom: "fc7_to_conv4_norm" #2816 19 19
  bottom: "conv6_2_to_conv4_norm" #2816 10 10
  bottom: "conv7_2_to_conv4_norm" #2816 5 5
  bottom: "conv8_2_to_conv4_norm" #2816 3 3 
  bottom: "conv9_2_to_conv4_norm" #2816 1 1
  top: "conv4_3_norm_pix0"
  concat_param {
    axis: 1
  }
}


layer {
  name: "fc7_pix"
  type: "Concat"
  bottom: "conv4_3_norm_to_fc7_norm"
  bottom: "fc7_norm"
  bottom: "conv6_2_to_fc7_norm"
  bottom: "conv7_2_to_fc7_norm"
  bottom: "conv8_2_to_fc7_norm"
  bottom: "conv9_2_to_fc7_norm"
  top: "fc7_pix0"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv6_2_pix"
  type: "Concat"
  bottom: "conv4_3_norm_to_conv6_norm"
  bottom: "fc7_to_conv6_norm"
  bottom: "conv6_2_norm"
  bottom: "conv7_2_to_conv6_norm"
  bottom: "conv8_2_to_conv6_norm"
  bottom: "conv9_2_to_conv6_norm"
  top: "conv6_2_pix0"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv7_2_pix"
  type: "Concat"
  bottom: "conv4_3_norm_to_conv7_norm"
  bottom: "fc7_to_conv7_norm"
  bottom: "conv6_2_to_conv7_norm"
  bottom: "conv7_2_norm"
  bottom: "conv8_2_to_conv7_norm"
  bottom: "conv9_2_to_conv7_norm"
  top: "conv7_2_pix0"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv8_2_pix"
  type: "Concat"
  bottom: "conv4_3_norm_to_conv8_norm"
  bottom: "fc7_to_conv8_norm"
  bottom: "conv6_2_to_conv8_norm"
  bottom: "conv7_2_to_conv8_norm"
  bottom: "conv8_2_norm"
  bottom: "conv9_2_to_conv8_norm"
  top: "conv8_2_pix0"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv9_2_pix"
  type: "Concat"
  bottom: "conv4_3_norm_to_conv9_norm"
  bottom: "fc7_to_conv9_norm"
  bottom: "conv6_2_to_conv9_norm"
  bottom: "conv7_2_to_conv9_norm"
  bottom: "conv8_2_to_conv9_norm"
  bottom: "conv9_2_norm"
  top: "conv9_2_pix0"
  concat_param {
    axis: 1
  }
}
######################## SE block for conv4_3_norm_pix ##############################

layer {
  name: "conv4_3_norm_pix_global_pool"
  type: "Pooling"
  bottom: "conv4_3_norm_pix0"
  top: "conv4_3_norm_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_3_norm_pix_1x1_down"
  type: "Convolution"
  bottom: "conv4_3_norm_pix_global_pool"
  top: "conv4_3_norm_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_norm_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "conv4_3_norm_pix_1x1_down"
  top: "conv4_3_norm_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv4_3_norm_pix_1x1_up"
  type: "Convolution"
  bottom: "conv4_3_norm_pix_1x1_down"
  top: "conv4_3_norm_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_norm_pix_prob"
  type: "Sigmoid"
  bottom: "conv4_3_norm_pix_1x1_up"
  top: "conv4_3_norm_pix_1x1_up"
}
layer {
  name: "conv4_3_norm_pix_prob_reshape"
  type: "Reshape"
  bottom: "conv4_3_norm_pix_1x1_up"
  top: "conv4_3_norm_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "conv4_3_norm_pix_scale"
  type: "Scale"
  bottom: "conv4_3_norm_pix0"
  bottom: "conv4_3_norm_pix_prob_reshape"
  top: "conv4_3_norm_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}

######################## SE block for fc7_pix ##############################

layer {
  name: "fc7_pix_global_pool"
  type: "Pooling"
  bottom: "fc7_pix0"
  top: "fc7_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "fc7_pix_1x1_down"
  type: "Convolution"
  bottom: "fc7_pix_global_pool"
  top: "fc7_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "fc7_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "fc7_pix_1x1_down"
  top: "fc7_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "fc7_pix_1x1_up"
  type: "Convolution"
  bottom: "fc7_pix_1x1_down"
  top: "fc7_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "fc7_pix_prob"
  type: "Sigmoid"
  bottom: "fc7_pix_1x1_up"
  top: "fc7_pix_1x1_up"
}
layer {
  name: "fc7_pix_prob_reshape"
  type: "Reshape"
  bottom: "fc7_pix_1x1_up"
  top: "fc7_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "fc7_pix_scale"
  type: "Scale"
  bottom: "fc7_pix0"
  bottom: "fc7_pix_prob_reshape"
  top: "fc7_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}
####################################SE block for conv6_2_pix ############################################################

layer {
  name: "conv6_2_pix_global_pool"
  type: "Pooling"
  bottom: "conv6_2_pix0"
  top: "conv6_2_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv6_2_pix_1x1_down"
  type: "Convolution"
  bottom: "conv6_2_pix_global_pool"
  top: "conv6_2_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv6_2_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "conv6_2_pix_1x1_down"
  top: "conv6_2_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv6_2_pix_1x1_up"
  type: "Convolution"
  bottom: "conv6_2_pix_1x1_down"
  top: "conv6_2_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv6_2_pix_prob"
  type: "Sigmoid"
  bottom: "conv6_2_pix_1x1_up"
  top: "conv6_2_pix_1x1_up"
}
layer {
  name: "conv6_2_pix_prob_reshape"
  type: "Reshape"
  bottom: "conv6_2_pix_1x1_up"
  top: "conv6_2_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "conv6_2_pix_scale"
  type: "Scale"
  bottom: "conv6_2_pix0"
  bottom: "conv6_2_pix_prob_reshape"
  top: "conv6_2_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}

####################################SE block for conv7_2_pix ############################################################

layer {
  name: "conv7_2_pix_global_pool"
  type: "Pooling"
  bottom: "conv7_2_pix0"
  top: "conv7_2_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv7_2_pix_1x1_down"
  type: "Convolution"
  bottom: "conv7_2_pix_global_pool"
  top: "conv7_2_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv7_2_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "conv7_2_pix_1x1_down"
  top: "conv7_2_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv7_2_pix_1x1_up"
  type: "Convolution"
  bottom: "conv7_2_pix_1x1_down"
  top: "conv7_2_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv7_2_pix_prob"
  type: "Sigmoid"
  bottom: "conv7_2_pix_1x1_up"
  top: "conv7_2_pix_1x1_up"
}
layer {
  name: "conv7_2_pix_prob_reshape"
  type: "Reshape"
  bottom: "conv7_2_pix_1x1_up"
  top: "conv7_2_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "conv7_2_pix_scale"
  type: "Scale"
  bottom: "conv7_2_pix0"
  bottom: "conv7_2_pix_prob_reshape"
  top: "conv7_2_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}
####################################SE block for conv8_2_pix ############################################################
layer {
  name: "conv8_2_pix_global_pool"
  type: "Pooling"
  bottom: "conv8_2_pix0"
  top: "conv8_2_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv8_2_pix_1x1_down"
  type: "Convolution"
  bottom: "conv8_2_pix_global_pool"
  top: "conv8_2_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv8_2_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "conv8_2_pix_1x1_down"
  top: "conv8_2_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv8_2_pix_1x1_up"
  type: "Convolution"
  bottom: "conv8_2_pix_1x1_down"
  top: "conv8_2_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv8_2_pix_prob"
  type: "Sigmoid"
  bottom: "conv8_2_pix_1x1_up"
  top: "conv8_2_pix_1x1_up"
}
layer {
  name: "conv8_2_pix_prob_reshape"
  type: "Reshape"
  bottom: "conv8_2_pix_1x1_up"
  top: "conv8_2_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "conv8_2_pix_scale"
  type: "Scale"
  bottom: "conv8_2_pix0"
  bottom: "conv8_2_pix_prob_reshape"
  top: "conv8_2_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}


####################################SE block for conv9_2_pix ############################################################
layer {
  name: "conv9_2_pix_global_pool"
  type: "Pooling"
  bottom: "conv9_2_pix0"
  top: "conv9_2_pix_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv9_2_pix_1x1_down"
  type: "Convolution"
  bottom: "conv9_2_pix_global_pool"
  top: "conv9_2_pix_1x1_down"
  convolution_param {
    num_output: 176 #2816/16 squeezed ratio=16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv9_2_pix_1x1_down/ReLU"
  type: "ReLU"
  bottom: "conv9_2_pix_1x1_down"
  top: "conv9_2_pix_1x1_down"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv9_2_pix_1x1_up"
  type: "Convolution"
  bottom: "conv9_2_pix_1x1_down"
  top: "conv9_2_pix_1x1_up"
  convolution_param {
    num_output: 2816 #176*16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv9_2_pix_prob"
  type: "Sigmoid"
  bottom: "conv9_2_pix_1x1_up"
  top: "conv9_2_pix_1x1_up"
}
layer {
  name: "conv9_2_pix_prob_reshape"
  type: "Reshape"
  bottom: "conv9_2_pix_1x1_up"
  top: "conv9_2_pix_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "conv9_2_pix_scale"
  type: "Scale"
  bottom: "conv9_2_pix0"
  bottom: "conv9_2_pix_prob_reshape"
  top: "conv9_2_pix"
  scale_param {
    axis: 0
    bias_term: false
  }
}

################################################################################################
## jisoo

layer {
  name: "conv4_3_norm_mbox_loc_pix"
  type: "Convolution"
  bottom: "conv4_3_norm_pix"
  top: "conv4_3_norm_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "conv4_3_norm_mbox_loc_pix"
  top: "conv4_3_norm_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "conv4_3_norm_mbox_loc_perm_pix"
  top: "conv4_3_norm_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_conf_pix"
  type: "Convolution"
  bottom: "conv4_3_norm_pix"
  top: "conv4_3_norm_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 84 #cls*4
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_3_norm_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "conv4_3_norm_mbox_conf_pix"
  top: "conv4_3_norm_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "conv4_3_norm_mbox_conf_perm_pix"
  top: "conv4_3_norm_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "conv4_3_norm_pix"
  bottom: "data"
  top: "conv4_3_norm_mbox_priorbox_pix"
  prior_box_param {
    min_size: 30.0
    max_size: 60.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 8
    offset: 0.5
  }
}
layer {
  name: "fc7_mbox_loc_pix"
  type: "Convolution"
  bottom: "fc7_pix"
  top: "fc7_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc7_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "fc7_mbox_loc_pix"
  top: "fc7_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "fc7_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "fc7_mbox_loc_perm_pix"
  top: "fc7_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "fc7_mbox_conf_pix"
  type: "Convolution"
  bottom: "fc7_pix"
  top: "fc7_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 126 #cls*6
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc7_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "fc7_mbox_conf_pix"
  top: "fc7_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "fc7_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "fc7_mbox_conf_perm_pix"
  top: "fc7_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "fc7_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "fc7_pix"
  bottom: "data"
  top: "fc7_mbox_priorbox_pix"
  prior_box_param {
    min_size: 60.0
    max_size: 111.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 16
    offset: 0.5
  }
}
layer {
  name: "conv6_2_mbox_loc_pix"
  type: "Convolution"
  bottom: "conv6_2_pix"
  top: "conv6_2_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "conv6_2_mbox_loc_pix"
  top: "conv6_2_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "conv6_2_mbox_loc_perm_pix"
  top: "conv6_2_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_conf_pix"
  type: "Convolution"
  bottom: "conv6_2_pix"
  top: "conv6_2_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 126 #cls*6
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "conv6_2_mbox_conf_pix"
  top: "conv6_2_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "conv6_2_mbox_conf_perm_pix"
  top: "conv6_2_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "conv6_2_pix"
  bottom: "data"
  top: "conv6_2_mbox_priorbox_pix"
  prior_box_param {
    min_size: 111.0
    max_size: 162.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 32
    offset: 0.5
  }
}
layer {
  name: "conv7_2_mbox_loc_pix"
  type: "Convolution"
  bottom: "conv7_2_pix"
  top: "conv7_2_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "conv7_2_mbox_loc_pix"
  top: "conv7_2_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "conv7_2_mbox_loc_perm_pix"
  top: "conv7_2_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_conf_pix"
  type: "Convolution"
  bottom: "conv7_2_pix"
  top: "conv7_2_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 126 #cls*6
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "conv7_2_mbox_conf_pix"
  top: "conv7_2_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "conv7_2_mbox_conf_perm_pix"
  top: "conv7_2_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "conv7_2_pix"
  bottom: "data"
  top: "conv7_2_mbox_priorbox_pix"
  prior_box_param {
    min_size: 162.0
    max_size: 213.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 64
    offset: 0.5
  }
}
layer {
  name: "conv8_2_mbox_loc_pix"
  type: "Convolution"
  bottom: "conv8_2_pix"
  top: "conv8_2_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "conv8_2_mbox_loc_pix"
  top: "conv8_2_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_2_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "conv8_2_mbox_loc_perm_pix"
  top: "conv8_2_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_conf_pix"
  type: "Convolution"
  bottom: "conv8_2_pix"
  top: "conv8_2_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 84 #cls*4
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "conv8_2_mbox_conf_pix"
  top: "conv8_2_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_2_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "conv8_2_mbox_conf_perm_pix"
  top: "conv8_2_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "conv8_2_pix"
  bottom: "data"
  top: "conv8_2_mbox_priorbox_pix"
  prior_box_param {
    min_size: 213.0
    max_size: 264.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 100
    offset: 0.5
  }
}
layer {
  name: "conv9_2_mbox_loc_pix"
  type: "Convolution"
  bottom: "conv9_2_pix"
  top: "conv9_2_mbox_loc_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_2_mbox_loc_perm_pix"
  type: "Permute"
  bottom: "conv9_2_mbox_loc_pix"
  top: "conv9_2_mbox_loc_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv9_2_mbox_loc_flat_pix"
  type: "Flatten"
  bottom: "conv9_2_mbox_loc_perm_pix"
  top: "conv9_2_mbox_loc_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv9_2_mbox_conf_pix"
  type: "Convolution"
  bottom: "conv9_2_pix"
  top: "conv9_2_mbox_conf_pix"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 84 #cls*4
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_2_mbox_conf_perm_pix"
  type: "Permute"
  bottom: "conv9_2_mbox_conf_pix"
  top: "conv9_2_mbox_conf_perm_pix"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv9_2_mbox_conf_flat_pix"
  type: "Flatten"
  bottom: "conv9_2_mbox_conf_perm_pix"
  top: "conv9_2_mbox_conf_flat_pix"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv9_2_mbox_priorbox_pix"
  type: "PriorBox"
  bottom: "conv9_2_pix"
  bottom: "data"
  top: "conv9_2_mbox_priorbox_pix"
  prior_box_param {
    min_size: 264.0
    max_size: 315.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 300
    offset: 0.5
  }
}
layer {
  name: "mbox_loc_pix"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_loc_flat_pix"
  bottom: "fc7_mbox_loc_flat_pix"
  bottom: "conv6_2_mbox_loc_flat_pix"
  bottom: "conv7_2_mbox_loc_flat_pix"
  bottom: "conv8_2_mbox_loc_flat_pix"
  bottom: "conv9_2_mbox_loc_flat_pix"
  top: "mbox_loc_pix"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf_pix"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_conf_flat_pix"
  bottom: "fc7_mbox_conf_flat_pix"
  bottom: "conv6_2_mbox_conf_flat_pix"
  bottom: "conv7_2_mbox_conf_flat_pix"
  bottom: "conv8_2_mbox_conf_flat_pix"
  bottom: "conv9_2_mbox_conf_flat_pix"
  top: "mbox_conf_pix"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox_pix"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_priorbox_pix"
  bottom: "fc7_mbox_priorbox_pix"
  bottom: "conv6_2_mbox_priorbox_pix"
  bottom: "conv7_2_mbox_priorbox_pix"
  bottom: "conv8_2_mbox_priorbox_pix"
  bottom: "conv9_2_mbox_priorbox_pix"
  top: "mbox_priorbox_pix"
  concat_param {
    axis: 2
  }
}
###############################################################
layer {
  name: "mbox_loss_pix"
  type: "MultiBoxLoss"
  bottom: "mbox_loc_pix"
  bottom: "mbox_conf_pix"
  bottom: "mbox_priorbox_pix"
  bottom: "label"
  top: "mbox_loss_pix"
  include {
    phase: TRAIN
  }
  propagate_down: true
  propagate_down: true
  propagate_down: false
  propagate_down: false
  loss_param {
    normalization: VALID
  }
  multibox_loss_param {
    loc_loss_type: SMOOTH_L1
    conf_loss_type: SOFTMAX
    loc_weight: 1.0 # softmax+ loc_weight*loc_loss 1.0
    num_classes: 21 #
    share_location: true
    match_type: PER_PREDICTION
    overlap_threshold: 0.5
    use_prior_for_matching: true
    background_label_id: 0
    use_difficult_gt: true
    neg_pos_ratio: 3.0
    neg_overlap: 0.5
    code_type: CENTER_SIZE
    ignore_cross_boundary_bbox: false
    mining_type: MAX_NEGATIVE
  }
}
################################Focal loss####################################
#layer {
#  name: "mbox_loss_focal"
#  type: "MultiBoxFocalLoss" #change the type
#  bottom: "mbox_loc"
#  bottom: "mbox_conf"
#  bottom: "mbox_priorbox"
#  bottom: "label"
#  top: "mbox_loss"
#  include {
#    phase: TRAIN
#  }
#  propagate_down: true
#  propagate_down: true
#  propagate_down: false
#  propagate_down: false
#  loss_param {
#    normalization: VALID
#  }
#  focal_loss_param { #set the alpha and gamma, default is alpha=0.25, gamma=2.0
#    alpha: 0.25
#    gamma: 2.0
#  }
#  multibox_loss_param {
#    loc_loss_type: SMOOTH_L1
#    conf_loss_type: SOFTMAX
#    loc_weight: 1.0
#    num_classes: 21 #23
#    share_location: true
#    match_type: PER_PREDICTION
#    overlap_threshold: 0.5
#    use_prior_for_matching: true
#    background_label_id: 0
#    use_difficult_gt: true
#    neg_pos_ratio: 3.0
#    neg_overlap: 0.5
#    code_type: CENTER_SIZE
#    ignore_cross_boundary_bbox: false
##    mining_type: MAX_NEGATIVE #use OHEM
#    mining_type: NONE #do not use OHEM
#  }
#}
